"use strict";const n=require("electron"),c={isShowing:!0,isDev:process.env.VITE_DEV_SERVER_URL!==void 0};var a={};(function(o){Object.defineProperty(o,"__esModule",{value:!0}),o.Logger=o.Level=void 0;var r;(function(e){e[e.INFO=0]="INFO",e[e.WARN=1]="WARN",e[e.ERROR=2]="ERROR",e[e.DEBUG=3]="DEBUG",e[e.CRITICAL=4]="CRITICAL"})(r=o.Level||(o.Level={}));const i={red:"\x1B[31m",green:"\x1B[32m",yellow:"\x1B[33m",blue:"\x1B[34m",white:"\x1B[37m",bold:"\x1B[1m",reset:"\x1B[0m"};class s{static date(){const t=new Date;return`[${`${t.getFullYear()}-${t.getMonth()}-${t.getDate()} ${t.getHours()}:${t.getMinutes()}:${t.getSeconds()}`}] ::`}static info(...t){return console.log(i.green,`${this.date()} [INFO] :: ${t}`,i.reset)}static warn(...t){return console.log(i.yellow,`${this.date()} [WARN] :: ${t}`,i.reset)}static error(...t){return console.log(i.red,`${this.date()} [ERROR] :: ${t}`,i.reset)}static debug(...t){if(this.debugMode)return console.log(i.blue,`${this.date()} [DEBUG] :: ${t}`,i.reset)}static critical(...t){return console.log(i.red+i.bold,`${this.date()} [CRITICAL] :: ${t}`,i.reset)}}s.debugMode=!0,s.log=(e,...t)=>{switch(e===void 0&&(e=r.INFO),e==="INFO"&&(e=r.INFO),e==="WARN"&&(e=r.WARN),e==="ERROR"&&(e=r.ERROR),e==="DEBUG"&&(e=r.DEBUG),e==="CRITICAL"&&(e=r.CRITICAL),e){case r.INFO:return s.info(t);case r.WARN:return s.warn(t);case r.ERROR:return s.error(t);case r.DEBUG:return s.debug(t);case r.CRITICAL:return s.critical(t);default:throw new TypeError("The logger must be of one of the following types: INFO, WARN, ERROR, DEBUG, CRITICAL")}},o.Logger=s})(a);const l=process.env.VITE_DEV_SERVER_URL!==void 0,u=process.env.VITE_DEV_SERVER_URL;async function R(){const o=new n.BrowserWindow({title:"PokeApi ",width:800,height:800,alwaysOnTop:!0,transparent:!0,autoHideMenuBar:!0,skipTaskbar:!0,frame:!0}),r=l?new URL(u):new URL("./dist/index.html");r.protocol="file:",l?await o.loadURL(r.toString()):await o.loadFile(r.toString())}async function g(){const o=new n.Tray("./public/icon.png");o.setToolTip("vite-react-electron"),o.setContextMenu(n.Menu.buildFromTemplate([{label:"Exit",click:()=>{n.app.quit()}}]))}async function d(){await g(),await R(),await w()}async function w(){n.globalShortcut.register("CommandOrControl+`",()=>{c.isShowing?(n.BrowserWindow.getAllWindows()[0].hide(),c.isShowing=!1,a.Logger.info("Hiding window")):(n.BrowserWindow.getAllWindows()[0].show(),c.isShowing=!0,a.Logger.info("Showing window"))})}n.app.whenReady().then(async()=>{await d(),n.app.on("activate",async()=>{a.Logger.info("App is activate")})});
